{"version":3,"sources":["components/Node.jsx","components/Grid.jsx","components/NavBar.jsx","Graph.js","algorithms.js","components/ContextMenu.jsx","App.js","serviceWorker.js","index.js"],"names":["Node","props","node","onMouseDown","onMouseEnter","onMouseLeave","onMouseUp","onContextMenu","isVisited","visited","isPath","isWall","isWeighted","weight","id","row","col","className","e","isStart","isGoal","Grid","this","grid","map","rowId","key","nodeId","Component","NavBar","algoChosen","handleAlgoDropdown","handleNodeFeatureDropdown","activateSearch","clearWalls","clearWeight","animationActivated","activateBtnColor","activateBtnText","isWeightedSearch","addNodeFeatureBtnTxt","addNodeFeature","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","aria-haspopup","aria-labelledby","algo","onClick","role","disabled","Graph","nodes","startNode","goalNode","open","closed","i","newRow","j","push","createNode","parent","children","depth","g","h","f","includes","forEach","updateDiscoveredNode","destination","current","formulateActions","graph","actions","length","bfs","checkOpen","dfs","splice","indexOf","unshift","bestFirstSearch","weightedSearch","heuristic","Math","abs","graphSearch","ordering","openList","closedList","shift","checkClosed","sort","a","b","ContextMenu","visible","contextMenuNode","isVisible","isValidNode","START_NODE_ROW","START_NODE_COL","GOAL_NODE_ROW","GOAL_NODE_COL","App","componentDidMount","initializeGraph","setState","name","copyGraph","state","_","cloneDeep","button","target","classList","contains","clickAction","preventDefault","contextMenu","document","getElementsByClassName","clickX","clientX","clickY","clientY","screenW","window","innerWidth","screenH","innerHeight","rootW","offsetWidth","rootH","offsetHeight","right","left","top","bottom","style","resetGraph","setTimeout","animateSearch","iteration","animatePath","path","coordinates","newGraph","Fragment","Boolean","location","hostname","match","ReactDOM","render","basename","process","console","log","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oUAqCeA,G,MAnCF,SAAAC,GAAS,IAIlBC,EAMED,EANFC,KACAC,EAKEF,EALFE,YACAC,EAIEH,EAJFG,aACAC,EAGEJ,EAHFI,aACAC,EAEEL,EAFFK,UACAC,EACEN,EADFM,cAGIC,EAAYN,EAAKO,QAAU,UAAY,GACvCC,EAASR,EAAKQ,OAAS,OAAS,GAChCC,EAAST,EAAKM,UAAY,GAAKN,EAAKS,OAAS,OAAS,GACtDC,EAA6B,IAAhBV,EAAKW,OAAe,UAA4B,IAAhBX,EAAKW,OAAe,UAAY,GAEnF,OACE,yBACEC,GAAE,eAAUZ,EAAKa,IAAf,YAAsBb,EAAKc,KAC7BC,UAAS,eAAUT,EAAV,YAAuBE,EAAvB,YAAiCC,EAAjC,YAA2CC,GACpDT,YAAa,SAACe,GAAD,OAAOf,EAAYe,EAAGhB,IACnCE,aAAc,kBAAMA,EAAaF,IACjCG,aAAc,kBAAMA,EAAaH,IACjCI,UAAW,kBAAMA,KACjBC,cAAe,SAACW,GAAD,OAAOX,EAAcW,EAAGhB,KAEvC,gCAASA,EAAKiB,QAAU,IAAMjB,EAAKkB,OAAS,IAAM,OCUzCC,E,iLAnCH,IAAD,EAQHC,KAAKrB,MANPsB,EAFK,EAELA,KACApB,EAHK,EAGLA,YACAC,EAJK,EAILA,aACAC,EALK,EAKLA,aACAC,EANK,EAMLA,UACAC,EAPK,EAOLA,cAEF,OACE,yBAAKU,UAAU,QACZM,EAAKC,KAAI,SAACT,EAAKU,GACd,OACE,yBAAKR,UAAU,MAAMS,IAAKD,GACvBV,EAAIS,KAAI,SAACtB,EAAMyB,GACd,OACE,kBAAC,EAAD,CACEzB,KAAMA,EACNwB,IAAKC,EACLxB,YAAaA,EACbC,aAAcA,EACdC,aAAcA,EACdC,UAAWA,EACXC,cAAeA,gB,GAxBhBqB,aCwIJC,E,iLAvIX,IADO,EAWHP,KAAKrB,MARP6B,EAHK,EAGLA,WACAC,EAJK,EAILA,mBACAC,EALK,EAKLA,0BACAC,EANK,EAMLA,eACAC,EAPK,EAOLA,WACAC,EARK,EAQLA,YACAC,EATK,EASLA,mBAIIC,EACW,KAAfP,EACI,WACAM,EACA,aACA,cACAE,EACW,KAAfR,EACI,sBACAM,EACA,YACA,YAAcN,EACdS,EACW,aAAfT,GAA4C,OAAfA,EACzBU,EAAuB,OA3BtB,EAULC,eAkBF,OACE,yBAAKxB,UAAU,+CACb,uBAAGA,UAAU,eAAeyB,KAAK,KAAjC,6BAGA,4BACEzB,UAAU,iBACV0B,KAAK,SACLC,cAAY,WACZC,cAAY,cACZC,gBAAc,aACdC,gBAAc,QACdC,aAAW,qBAEX,0BAAM/B,UAAU,yBAElB,yBAAKA,UAAU,2BAA2BH,GAAG,cAC3C,wBAAIG,UAAU,sBACZ,wBAAIA,UAAU,qBACZ,4BACEA,UAAU,+BACV0B,KAAK,SACL7B,GAAG,gBACH8B,cAAY,WACZK,gBAAc,OACdF,gBAAc,SAEd,8CACA,0BAAM9B,UAAU,WAElB,wBAAIA,UAAU,gBAAgBiC,kBAAgB,iBAzDrC,CAAC,MAAO,MAAO,WAAY,2BAA4B,MA0DlD1B,KAAI,SAAA2B,GACd,OACE,4BACElC,UAAU,gBACVS,IAAKyB,EACLC,QAAS,kBAAMrB,EAAmBoB,KAExB,aAATA,GAAgC,OAATA,EAAgBA,EAAO,eAAiBA,OAKxE,4BACElC,UAAS,cAASoB,GAClBM,KAAK,SACLS,QAAS,kBAAMnB,MAEf,gCAASK,KAGb,wBAAIrB,UAAU,qBACZ,4BACEA,UAAU,+BACVyB,KAAK,IACL5B,GAAG,iBACHuC,KAAK,SACLT,cAAY,WACZK,gBAAc,OACdF,gBAAc,SAEd,gCAASP,IAEX,yBAAKvB,UAAU,gBAAgBiC,kBAAgB,kBAC7C,4BACEjC,UAAU,iBACVmC,QAAS,kBAAMpB,EAA0B,UAF3C,QAMA,4BACEf,UAAU,iBACVqC,SAAUf,EACVa,QAAS,kBAAMpB,EAA0B,cAH3C,YAOA,4BACEf,UAAU,gBACVqC,SAAUf,EACVa,QAAS,kBAAMpB,EAA0B,cAH3C,cASJ,4BACEf,UAAS,eACT0B,KAAK,SACLS,QAAS,kBAAMlB,MAEf,gDAEF,4BACEjB,UAAS,eACTqC,SAAUf,EACVI,KAAK,SACLS,QAAS,kBAAMjB,MAEf,wD,GAhIOP,aCgEN2B,E,WAjEb,aAAe,oBACbjC,KAAKkC,MAAQ,GACblC,KAAKmC,UAAY,KACjBnC,KAAKoC,SAAW,KAChBpC,KAAKqC,KAAO,GACZrC,KAAKsC,OAAS,G,8DAIdtC,KAAKkC,MAAQ,GACb,IAAK,IAAIK,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAE3B,IADA,IAAMC,EAAS,GACNC,EAAI,EAAGA,EAAI,GAAIA,IACtBD,EAAOE,KAAK1C,KAAK2C,WAAWJ,EAAGE,IAEjCzC,KAAKkC,MAAMQ,KAAKF,M,iCAIT/C,EAAKC,GACd,MAAO,CACLD,IAAKA,EACLC,IAAKA,EACLkD,OAAQ,KACRC,SAAU,GACVhD,SAAS,EACTC,QAAQ,EACRT,QAAQ,EACRF,SAAS,EACT2D,MAAO,EACPvD,OAAQ,EACRwD,EAAG,EACHC,EAAG,EACHC,EAAG,K,gCAKGrE,GACR,OAAOoB,KAAKqC,KAAKa,SAAStE,K,kCAIhBA,GACV,OAAOoB,KAAKsC,OAAOY,SAAStE,K,mCAI5BoB,KAAKkC,MAAMiB,SAAQ,SAAA1D,GACjBA,EAAI0D,SAAQ,SAAAvE,GAEVA,EAAKgE,OAAS,KACdhE,EAAKqE,EAAI,EACTrE,EAAKmE,EAAI,EACTnE,EAAKoE,EAAI,EACTpE,EAAKkE,MAAQ,EACblE,EAAKO,SAAU,EACfP,EAAKQ,QAAS,QAGlBY,KAAKsC,OAAS,GACdtC,KAAKqC,KAAO,O,KCGVe,EAAuB,SAACC,EAAaC,EAAS/D,GAClD8D,EAAYT,OAASU,EACrBD,EAAYN,EAAIO,EAAQP,EAAIxD,EAC5B8D,EAAYJ,EAAII,EAAYN,EAAIM,EAAYL,GAGxCO,EAAmB,SAACD,EAASE,GACjC,IAAM/D,EAAM6D,EAAQ7D,IACdC,EAAM4D,EAAQ5D,IACd+D,EAAU,GAUhB,OARIhE,EAAM,GAAGgE,EAAQf,KAAKc,EAAMtB,MAAMzC,EAAM,GAAGC,IAE3CA,EAAM8D,EAAMtB,MAAM,GAAGwB,OAAS,GAAGD,EAAQf,KAAKc,EAAMtB,MAAMzC,GAAKC,EAAM,IAErED,EAAM+D,EAAMtB,MAAMwB,OAAS,GAAGD,EAAQf,KAAKc,EAAMtB,MAAMzC,EAAM,GAAGC,IAEhEA,EAAM,GAAG+D,EAAQf,KAAKc,EAAMtB,MAAMzC,GAAKC,EAAM,IAE1C+D,GAGHE,EAAM,SAACL,EAASD,EAAaG,GAE5BA,EAAMI,UAAUP,KACnBD,EAAqBC,EAAaC,EAAS,GAC3CE,EAAMnB,KAAKK,KAAKW,KAIdQ,EAAM,SAACP,EAASD,EAAaG,GACjCJ,EAAqBC,EAAaC,EAAS,GAEvCE,EAAMI,UAAUP,IAClBG,EAAMnB,KAAKyB,OAAON,EAAMnB,KAAK0B,QAAQV,GAAc,GAErDG,EAAMnB,KAAK2B,QAAQX,IAefY,EAAkB,SAACX,EAASD,EAAaG,GACxCA,EAAMI,UAAUP,GAIRC,EAAQP,EAAIM,EAAY9D,OACxB8D,EAAYL,GAAKK,EAAYJ,GACtCG,EAAqBC,EAAaC,EAASD,EAAY9D,SALzD6D,EAAqBC,EAAaC,EAASD,EAAY9D,QACvDiE,EAAMnB,KAAKK,KAAKW,KAUda,EAAiB,SAACZ,EAASD,EAAaG,GACvCA,EAAMI,UAAUP,GAIRC,EAAQP,EAAIM,EAAY9D,OACxB8D,EAAYL,GAAKK,EAAYJ,GACtCG,EAAqBC,EAAaC,EAASD,EAAY9D,SALzD6D,EAAqBC,EAAaC,EAASD,EAAY9D,QACvDiE,EAAMnB,KAAKK,KAAKW,KAUdc,EAAY,SAACvF,EAAMwD,GAGvB,OAFSgC,KAAKC,IAAIzF,EAAKc,IAAM0C,EAAS1C,KAC7B0E,KAAKC,IAAIzF,EAAKa,IAAM2C,EAAS3C,MAIzB6E,EApJK,SAACd,EAAOe,GAC1B,IAAMpC,EAAYqB,EAAMrB,UAClBC,EAAWoB,EAAMpB,SACvBgB,EAAqBjB,EAAWA,EAAW,GAC3C,IAAMqC,EAAWhB,EAAMnB,KACjBoC,EAAajB,EAAMlB,OACzBkC,EAAS9B,KAAKP,GACd,IAEamB,EAEb,IAHiB,OAAbiB,IAAmBpC,EAAUa,EAAImB,EAAUhC,EAAWC,IAGnDoC,EAASd,QAAQ,CAGtB,GAFAJ,EAAUkB,EAASE,QACnBD,EAAW/B,KAAKY,GACZA,EAAQxD,OAAQ,EACJ,EACd,MAGUyD,EAAiBD,EAASE,GAE5BL,SAAQ,SAAAE,GAEd,IAAKA,EAAYhE,SACVmE,EAAMmB,YAAYtB,GACrB,OAAQkB,GACN,IAAK,MACHZ,EAAIL,EAASD,EAAaG,GAC1B,MACF,IAAK,MACHK,EAAIP,EAASD,EAAaG,GAC1B,MACF,IAAK,2BACHH,EAAYL,EAAImB,EAAUd,EAAajB,GACvC6B,EAAgBX,EAASD,EAAaG,GAExC,QACmB,OAAbe,IACFlB,EAAYL,EAAImB,EAAUd,EAAajB,IACzC8B,EAAeZ,EAASD,EAAaG,OAM9B,aAAbe,GAAwC,OAAbA,EAC7BC,EAASI,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE5B,EAAI6B,EAAE7B,GAAK,EAAI,KACtB,6BAAbsB,GACPC,EAASI,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE7B,EAAI8B,EAAE9B,GAAK,EAAI,O,iBC5BnC+B,EAlBK,SAAApG,GAAU,IACrBqG,EAA4BrG,EAA5BqG,QAASC,EAAmBtG,EAAnBsG,gBACVC,EAAYF,EAAU,UAAY,GAClCG,EAAkC,OAApBF,EAGpB,OACE,yBAAKtF,UAAS,sBAAiBuF,IAC7B,wCAAcC,EAAcF,EAAgBxF,IAAM,KAAOwF,EAAgBvF,IAAM,IAC/E,sCAAYyF,GAAyC,OAA3BF,EAAgBrC,OAAkB,QAAUqC,EAAgBrC,OAAOnD,IAAM,KAAOwF,EAAgBrC,OAAOlD,IAAM,IAAW,IAClJ,uCAAayF,EAAcF,EAAgB9F,QAAU,OAAS,QAAU,IACxE,sCAAYgG,EAAcF,EAAgB1F,OAAQ,IAClD,oCAAU4F,EAAcF,EAAgBlC,EAAI,IAC5C,yCAAeoC,EAAcF,EAAgBjC,EAAI,M,yjBCNvD,IAAMoC,EAAiB,GACjBC,EAAiB,GACjBC,EAAgB,GAChBC,EAAgB,GA0SPC,E,YAvSb,WAAY7G,GAAQ,IAAD,8BACjB,4CAAMA,KAYR8G,kBAAoB,WAClB,IAAMjC,EAAQ,IAAIvB,EAClBuB,EAAMkC,kBAEN,IAAMvD,EAAYqB,EAAMtB,MAAMkD,GAAgBC,GAC9C7B,EAAMrB,UAAYA,EAClBA,EAAUtC,SAAU,EAEpB,IAAMuC,EAAWoB,EAAMtB,MAAMoD,GAAeC,GAC5C/B,EAAMpB,SAAWA,EACjBA,EAAStC,QAAS,EAClB,EAAK6F,SAAS,CAAEnC,WAxBC,EA4BnB/C,mBAAqB,SAAAmF,GACN,aAATA,GAAgC,OAATA,EACzB,EAAKD,SAAS,CAAEnF,WAAYoF,EAAMzE,eAAgB,SAC/C,EAAKwE,SAAS,CAAEnF,WAAYoF,KA/BhB,EAkCnBlF,0BAA4B,SAAAkF,GAC1B,EAAKD,SAAS,CAAExE,eAAgByE,KAnCf,EAsCnBC,UAAY,SAAAC,GAEV,OADcC,IAAEC,UAAUF,EAAMtC,QAvCf,EA2CnB3E,YAAc,SAACe,EAAGhB,GAChB,GACG,EAAKkH,MAAMhF,oBACC,IAAblB,EAAEqG,QACD,EAAKH,MAAMd,QA+BH,EAAKc,MAAMd,UACfpF,EAAEsG,OAAOC,UAAUC,SAAS,gBAC/B,EAAKT,SAAS,CAAEX,SAAS,EAAOC,gBAAiB,YAhCnD,CAEA,EAAKU,SAAS,CACZU,YAAazH,EAAKiB,QAAU,QAAUjB,EAAKkB,OAAS,OAAS,WAG/D,IAAM0D,EAAQ,EAAKqC,UAAU,EAAKC,OAE7BlH,EAAKiB,SAAYjB,EAAKkB,SAEO,SAA9B,EAAKgG,MAAM3E,gBACgC,IAA3CqC,EAAMtB,MAAMtD,EAAKa,KAAKb,EAAKc,KAAKH,OAEhCiE,EAAMtB,MAAMtD,EAAKa,KAAKb,EAAKc,KAAKL,QAAUT,EAAKS,OAEjB,aAA9B,EAAKyG,MAAM3E,gBACVqC,EAAMtB,MAAMtD,EAAKa,KAAKb,EAAKc,KAAKL,OAMH,aAA9B,EAAKyG,MAAM3E,gBACVqC,EAAMtB,MAAMtD,EAAKa,KAAKb,EAAKc,KAAKL,SAEc,IAA3CmE,EAAMtB,MAAMtD,EAAKa,KAAKb,EAAKc,KAAKH,OAClCiE,EAAMtB,MAAMtD,EAAKa,KAAKb,EAAKc,KAAKH,OAAS,EACpCiE,EAAMtB,MAAMtD,EAAKa,KAAKb,EAAKc,KAAKH,OAAS,GATD,IAA3CiE,EAAMtB,MAAMtD,EAAKa,KAAKb,EAAKc,KAAKH,OAClCiE,EAAMtB,MAAMtD,EAAKa,KAAKb,EAAKc,KAAKH,OAAS,EACpCiE,EAAMtB,MAAMtD,EAAKa,KAAKb,EAAKc,KAAKH,OAAS,GASpD,EAAKoG,SAAS,CAAEnC,YA7ED,EAoFnB1E,aAAe,SAAAF,GACkB,KAA3B,EAAKkH,MAAMO,aACb,EAAKV,UAAS,SAACG,EAAOnH,GACpB,IAAM6E,EAAQ,EAAKqC,UAAUC,GAqC7B,MAnC0B,UAAtBA,EAAMO,aACR7C,EAAMrB,UAAYqB,EAAMtB,MAAMtD,EAAKa,KAAKb,EAAKc,KAC7C8D,EAAMtB,MAAMtD,EAAKa,KAAKb,EAAKc,KAAKG,SAAU,GACX,SAAtBiG,EAAMO,aACf7C,EAAMpB,SAAWoB,EAAMtB,MAAMtD,EAAKa,KAAKb,EAAKc,KAC5C8D,EAAMtB,MAAMtD,EAAKa,KAAKb,EAAKc,KAAKI,QAAS,GAEnB,WAAtBgG,EAAMO,aACLzH,EAAKiB,SACLjB,EAAKkB,QACwB,SAA9B,EAAKgG,MAAM3E,gBACgC,IAA3CqC,EAAMtB,MAAMtD,EAAKa,KAAKb,EAAKc,KAAKH,OAIV,WAAtBuG,EAAMO,aACLzH,EAAKiB,SACLjB,EAAKkB,QACwB,aAA9B,EAAKgG,MAAM3E,gBACVqC,EAAMtB,MAAMtD,EAAKa,KAAKb,EAAKc,KAAKL,OAMX,WAAtByG,EAAMO,aACLzH,EAAKiB,SACLjB,EAAKkB,QACwB,aAA9B,EAAKgG,MAAM3E,gBACVqC,EAAMtB,MAAMtD,EAAKa,KAAKb,EAAKc,KAAKL,SAEc,IAA3CmE,EAAMtB,MAAMtD,EAAKa,KAAKb,EAAKc,KAAKH,OAClCiE,EAAMtB,MAAMtD,EAAKa,KAAKb,EAAKc,KAAKH,OAAS,EACpCiE,EAAMtB,MAAMtD,EAAKa,KAAKb,EAAKc,KAAKH,OAAS,GAZD,IAA3CiE,EAAMtB,MAAMtD,EAAKa,KAAKb,EAAKc,KAAKH,OAClCiE,EAAMtB,MAAMtD,EAAKa,KAAKb,EAAKc,KAAKH,OAAS,EACpCiE,EAAMtB,MAAMtD,EAAKa,KAAKb,EAAKc,KAAKH,OAAS,EAVhDiE,EAAMtB,MAAMtD,EAAKa,KAAKb,EAAKc,KAAKL,QAAUT,EAAKS,OAsB1C,EAAP,GAAYyG,EAAZ,CAAmBtC,cA5HN,EAiInBzE,aAAe,SAAAH,GACkB,KAA3B,EAAKkH,MAAMO,aACb,EAAKV,UAAS,SAACG,EAAOnH,GACpB,IAAM6E,EAAQ,EAAKqC,UAAUC,GAM7B,MAJ+B,UAA3B,EAAKA,MAAMO,YACb7C,EAAMtB,MAAMtD,EAAKa,KAAKb,EAAKc,KAAKG,SAAU,EACR,SAA3B,EAAKiG,MAAMO,cAClB7C,EAAMtB,MAAMtD,EAAKa,KAAKb,EAAKc,KAAKI,QAAS,GACpC,EAAP,GAAYgG,EAAZ,CAAmBtC,cA1IN,EA+InBxE,UAAY,WAEqB,KAA3B,EAAK8G,MAAMO,aAAoB,EAAKV,SAAS,CAAEU,YAAa,MAjJ/C,EAoJnBpH,cAAgB,SAACW,EAAGhB,GAClBgB,EAAE0G,iBACF,IAAMC,EAAcC,SAASC,uBAAuB,eAC9CC,EAAS9G,EAAE+G,QACXC,EAAShH,EAAEiH,QACXC,EAAUC,OAAOC,WACjBC,EAAUF,OAAOG,YACjBC,EAAQZ,EAAY,GAAGa,YACvBC,EAAQd,EAAY,GAAGe,aAEvBC,EAAQT,EAAUJ,EAASS,EAC3BK,GAAQD,EACRE,EAAMR,EAAUL,EAASS,EACzBK,GAAUD,EAEZF,IACFhB,EAAY,GAAGoB,MAAMH,KAArB,UAA+Bd,EAAS,EAAxC,OAGEc,IACFjB,EAAY,GAAGoB,MAAMH,KAArB,UAA+Bd,EAASS,EAAQ,EAAhD,OAGEM,IACFlB,EAAY,GAAGoB,MAAMF,IAArB,UAA8Bb,EAAS,EAAvC,OAGEc,IACFnB,EAAY,GAAGoB,MAAMF,IAArB,UAA8Bb,EAASS,EAAQ,EAA/C,OAGF,EAAK1B,SAAS,CAAEX,SAAS,EAAMC,gBAAiBrG,KAnL/B,EAsLnB+B,eAAiB,WACe,KAA1B,EAAKmF,MAAMtF,YAAsB,EAAKsF,MAAMhF,qBAC9C,EAAK6E,UAAS,SAACG,EAAOnH,GACpB,IAAM6E,EAAQ,EAAKqC,UAAUC,GAI7B,OAHAtC,EAAMoE,aACNtD,EAAYd,EAAOsC,EAAMtF,YAElB,CAAEgD,QAAO1C,oBAAoB,MAEtC+G,YAAW,kBAAM,EAAKC,kBAAiB,OA/LxB,EAoMnBA,cAAgB,WACd,IACIvF,EADa,EAAKuD,MAAMtC,MAEnBlB,OAAOa,SAAQ,SAACvE,EAAMmJ,GAC7BxF,EAAIwF,EACJF,YAAW,WACT,EAAKlC,UAAS,SAACG,EAAOnH,GACpB,IAAM6E,EAAQ,EAAKqC,UAAUC,GAE7B,OADAtC,EAAMtB,MAAMtD,EAAKa,KAAKb,EAAKc,KAAKP,SAAU,EACnC,CAAEqE,cAEV,GAAKuE,MAEVF,YAAW,kBAAM,EAAKG,gBAAe,IAAMzF,EAAI,KAjN9B,EAoNnByF,YAAc,WAKZ,IAJA,IAEIzF,EAFAe,EAAU,EAAKwC,MAAMtC,MAAMpB,SACzB6F,EAAO,GAGN3E,EAAQV,SAAWU,GAA8B,OAAnBA,EAAQV,QAC3CqF,EAAKjE,QAAQ,CAAEvE,IAAK6D,EAAQ7D,IAAKC,IAAK4D,EAAQ5D,MAC9C4D,EAAUA,EAAQV,OAEpBqF,EAAKjE,QAAQ,CAAEvE,IAAK6D,EAAQ7D,IAAKC,IAAK4D,EAAQ5D,MAE1C4D,EAAQV,SAAWU,GACrB2E,EAAK9E,SAAQ,SAAC+E,EAAaH,GACzBxF,EAAIwF,EACJF,YAAW,WACT,EAAKlC,UAAS,SAACG,EAAOnH,GACpB,IAAMwJ,EAAW,EAAKtC,UAAUC,GAEhC,OADAqC,EAASjG,MAAMgG,EAAYzI,KAAKyI,EAAYxI,KAAKN,QAAS,EACnD,CAAEoE,MAAO2E,QAEjB,GAAKJ,MAGZF,YAAW,WACT,EAAKlC,SAAS,CAAE7E,oBAAoB,MACnC,GAAKyB,IA7OS,EAgPnB3B,WAAa,WACX,IAAK,EAAKkF,MAAMhF,mBAAoB,CAClC,IAAMqH,EAAW,EAAKtC,UAAU,EAAKC,OACrCqC,EAASjG,MAAMiB,SAAQ,SAAA1D,GACrBA,EAAI0D,SAAQ,SAAAvE,GACVA,EAAKS,QAAS,QAGlB,EAAKsG,SAAS,CAAEnC,MAAO2E,MAxPR,EA4PnBtH,YAAc,WACZ,IAAK,EAAKiF,MAAMhF,mBAAoB,CAClC,IAAMqH,EAAW,EAAKtC,UAAU,EAAKC,OACrCqC,EAASjG,MAAMiB,SAAQ,SAAA1D,GACrBA,EAAI0D,SAAQ,SAAAvE,GACVA,EAAKW,OAAS,QAGlB,EAAKoG,SAAS,CAAEnC,MAAO2E,MAlQzB,EAAKrC,MAAQ,CACXtC,MAAO,IAAIvB,EACXzB,WAAY,GACZM,oBAAoB,EACpBuF,YAAa,GACblF,eAAgB,OAChB6D,SAAS,EACTC,gBAAiB,MATF,E,sEAyQjB,OACE,kBAAC,IAAMmD,SAAP,KACE,kBAAC,EAAD,CACE5H,WAAYR,KAAK8F,MAAMtF,WACvBC,mBAAoBT,KAAKS,mBACzBC,0BAA2BV,KAAKU,0BAChCC,eAAgBX,KAAKW,eACrBiH,WAAY5H,KAAK4H,WACjBhH,WAAYZ,KAAKY,WACjBC,YAAab,KAAKa,YAClBC,mBAAoBd,KAAK8F,MAAMhF,mBAC/BK,eAAgBnB,KAAK8F,MAAM3E,iBAE7B,kBAAC,EAAD,CACElB,KAAMD,KAAK8F,MAAMtC,MAAMtB,MACvBrD,YAAamB,KAAKnB,YAClBC,aAAckB,KAAKlB,aACnBC,aAAciB,KAAKjB,aACnBC,UAAWgB,KAAKhB,UAChBC,cAAee,KAAKf,gBAEtB,kBAAC,EAAD,CACE+F,QAAShF,KAAK8F,MAAMd,QACpBC,gBAAiBjF,KAAK8F,MAAMb,uB,GAjSpB3E,aCFE+H,QACW,cAA7BtB,OAAOuB,SAASC,UAEe,UAA7BxB,OAAOuB,SAASC,UAEhBxB,OAAOuB,SAASC,SAASC,MACvB,2DCRNC,IAASC,OAAO,kBAAC,IAAD,CAAeC,SAAUC,yBACtCC,QAAQC,IAAIF,yBACb,kBAAC,EAAD,OAAyBpC,SAASuC,eAAe,SDqH7C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.27516d61.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Node = props => {\n  //const {col, row, isDiscovered, isVisited, isWall}\n  \n  const {\n    node,\n    onMouseDown,\n    onMouseEnter,\n    onMouseLeave,\n    onMouseUp,\n    onContextMenu\n  } = props;\n\n  const isVisited = node.visited ? \"visited\" : \"\";\n  const isPath = node.isPath ? \"path\" : \"\";\n  const isWall = node.isVisited ? \"\" : node.isWall ? \"wall\" : \"\";\n  const isWeighted = node.weight === 3 ? \"weight3\" : node.weight === 5 ? \"weight5\" : \"\";\n\n  return (\n    <div\n      id={`node-${node.row}-${node.col}`}\n      className={`node ${isVisited} ${isPath} ${isWall} ${isWeighted}`}\n      onMouseDown={(e) => onMouseDown(e, node)}\n      onMouseEnter={() => onMouseEnter(node)}\n      onMouseLeave={() => onMouseLeave(node)}\n      onMouseUp={() => onMouseUp()}\n      onContextMenu={(e) => onContextMenu(e, node)}\n    >\n      <strong>{node.isStart ? \"S\" : node.isGoal ? \"G\" : \"\"}</strong>\n      {/* {node.weight === 2 ? <img className=\"dice\" src=\"dice_2.png\" unselectable=\"on\"/> : node.weight === 3 ? <img className=\"dice\" src=\"dice_3.png\" unselectable=\"on\"/> : \"\"} */}\n      \n\n    </div>\n  );\n};\n\nexport default Node;\n","import Node from \"./Node\";\nimport React, { Component } from \"react\";\n\nclass Grid extends Component {\n  render() {\n    const {\n      grid,\n      onMouseDown,\n      onMouseEnter,\n      onMouseLeave,\n      onMouseUp,\n      onContextMenu\n    } = this.props;\n    return (\n      <div className=\"grid\">\n        {grid.map((row, rowId) => {\n          return (\n            <div className=\"row\" key={rowId}>\n              {row.map((node, nodeId) => {\n                return (\n                  <Node\n                    node={node}\n                    key={nodeId}\n                    onMouseDown={onMouseDown}\n                    onMouseEnter={onMouseEnter}\n                    onMouseLeave={onMouseLeave}\n                    onMouseUp={onMouseUp}\n                    onContextMenu={onContextMenu}\n                  />\n                );\n              })}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default Grid;\n","import React, { Component } from \"react\";\n\nclass NavBar extends Component {\n  render() {\n    const algorithms = [\"BFS\", \"DFS\", \"Dijkstra\", \"Greedy Best-First Search\", \"A*\"];\n    const {\n      algoChosen,\n      handleAlgoDropdown,\n      handleNodeFeatureDropdown,\n      activateSearch,\n      clearWalls,\n      clearWeight,\n      animationActivated,\n      addNodeFeature\n    } = this.props;\n\n    const activateBtnColor =\n      algoChosen === \"\"\n        ? \"btn-dark\"\n        : animationActivated\n        ? \"btn-danger\"\n        : \"btn-success\";\n    const activateBtnText =\n      algoChosen === \"\"\n        ? \"Choose An Algorithm\"\n        : animationActivated\n        ? \"Searching\"\n        : \"Activate \" + algoChosen;\n    const isWeightedSearch =\n      algoChosen === \"Dijkstra\" || algoChosen === \"A*\" ? false : true;\n    const addNodeFeatureBtnTxt = \"Add \" + addNodeFeature;\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n        <a className=\"navbar-brand\" href=\"#\">\n          Path Searching Visualizer\n        </a>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarText\"\n          aria-controls=\"navbarText\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarText\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"dropdown nav-item\">\n              <button\n                className=\"btn btn-dark dropdown-toggle\"\n                type=\"button\"\n                id=\"dropdownMenu2\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n              >\n                <strong>Algorithms</strong>\n                <span className=\"caret\"></span>\n              </button>\n              <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu2\">\n                {algorithms.map(algo => {\n                  return (\n                    <button\n                      className=\"dropdown-item\"\n                      key={algo}\n                      onClick={() => handleAlgoDropdown(algo)}\n                    >\n                      {algo === \"Dijkstra\" || algo === \"A*\" ? algo + \"  (Weighted)\" : algo}\n                    </button>\n                  );\n                })}\n              </ul>\n              <button\n                className={`btn ${activateBtnColor}`}\n                type=\"button\"\n                onClick={() => activateSearch()}\n              >\n                <strong>{activateBtnText}</strong>\n              </button>\n            </li>\n            <li className=\"nav-item dropdown\">\n              <button\n                className=\"btn btn-dark dropdown-toggle\"\n                href=\"#\"\n                id=\"navbarDropdown\"\n                role=\"button\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n              >\n                <strong>{addNodeFeatureBtnTxt}</strong>\n              </button>\n              <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                <button\n                  className=\"dropdown-item \"\n                  onClick={() => handleNodeFeatureDropdown(\"Wall\")}\n                >\n                  Wall\n                </button>\n                <button\n                  className=\"dropdown-item \"\n                  disabled={isWeightedSearch}\n                  onClick={() => handleNodeFeatureDropdown(\"Weight 3\")}\n                >\n                  Weight 3\n                </button>\n                <button\n                  className=\"dropdown-item\"\n                  disabled={isWeightedSearch}\n                  onClick={() => handleNodeFeatureDropdown(\"Weight 5\")}\n                >\n                  Weight 5\n                </button>\n              </div>\n            </li>\n            <button\n              className={`btn btn-dark`}\n              type=\"button\"\n              onClick={() => clearWalls()}\n            >\n              <strong>Clear Walls</strong>\n            </button>\n            <button\n              className={`btn btn-dark`}\n              disabled={isWeightedSearch}\n              type=\"button\"\n              onClick={() => clearWeight()}\n            >\n              <strong>Clear Weight</strong>\n            </button>\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default NavBar;\n","class Graph {\n  constructor() {\n    this.nodes = [];\n    this.startNode = null;\n    this.goalNode = null;\n    this.open = [];\n    this.closed = [];\n  }\n\n  initializeGraph() {\n    this.nodes = [];\n    for (let i = 0; i < 25; i++) {\n      const newRow = [];\n      for (let j = 0; j < 50; j++) {\n        newRow.push(this.createNode(i, j));\n      }\n      this.nodes.push(newRow);\n    }\n  }\n\n  createNode(row, col) {\n    return {\n      row: row,\n      col: col,\n      parent: null,\n      children: [],\n      isStart: false,\n      isGoal: false,\n      isWall: false,\n      visited: false,\n      depth: 0,\n      weight: 1,\n      g: 0,\n      h: 0,\n      f: 0\n    };\n  }\n\n  //check whether node is in open list\n  checkOpen(node) {\n    return this.open.includes(node);\n  }\n\n  //check whether node is in closed list\n  checkClosed(node) {\n    return this.closed.includes(node);\n  }\n\n  resetGraph() {\n    this.nodes.forEach(row => {\n      row.forEach(node => {\n        //console.log(node);\n        node.parent = null;\n        node.f = 0;\n        node.g = 0;\n        node.h = 0;\n        node.depth = 0;\n        node.visited = false;\n        node.isPath = false;\n      });\n    });\n    this.closed = [];\n    this.open = [];\n  }\n}\n\nexport default Graph;\n","const graphSearch = (graph, ordering) => {\n  const startNode = graph.startNode;\n  const goalNode = graph.goalNode;\n  updateDiscoveredNode(startNode, startNode, 0);\n  const openList = graph.open;\n  const closedList = graph.closed;\n  openList.push(startNode);\n  let reachedGoal = false;\n  if (ordering === \"A*\") startNode.h = heuristic(startNode, goalNode);\n  let actions, current;\n\n  while (openList.length) {\n    current = openList.shift();\n    closedList.push(current);\n    if (current.isGoal) {\n      reachedGoal = true;\n      break;\n    } else {\n      //all allowed actions for current node\n      actions = formulateActions(current, graph);\n      //different ordering of open list for each algo\n      actions.forEach(destination => {\n        //destination not in closed list\n        if (!destination.isWall) {\n          if (!graph.checkClosed(destination)) {\n            switch (ordering) {\n              case \"BFS\":\n                bfs(current, destination, graph);\n                break;\n              case \"DFS\":\n                dfs(current, destination, graph);\n                break;\n              case \"Greedy Best-First Search\":\n                destination.h = heuristic(destination, goalNode);\n                bestFirstSearch(current, destination, graph);\n              //algorithms with weighted graph\n              default:\n                if (ordering === \"A*\")\n                  destination.h = heuristic(destination, goalNode);\n                weightedSearch(current, destination, graph);\n            }\n          }\n        }\n      });\n      //algorithms that use priority queue\n      if (ordering === \"Dijkstra\" || ordering === \"A*\")\n        openList.sort((a, b) => (a.f < b.f ? -1 : 1));\n      else if (ordering === \"Greedy Best-First Search\")\n        openList.sort((a, b) => (a.h < b.h ? -1 : 1));\n    }\n  }\n\n  // let path = \"\";\n  // if (reachedGoal) {\n  //   //do something\n  //   current = goalNode;\n  //   while (current.parent !== current) {\n  //     path = \"-node(\" + current.row + \",\" + current.col + \")\" + path;\n  //     current = current.parent;\n  //   }\n  //   path = \"node(\" + current.row + \",\" + current.col + \")\" + path;\n  // }\n  // current.isStart ? console.log(path) : console.log(\"NO PATH\");\n};\n\nconst updateDiscoveredNode = (destination, current, weight) => {\n  destination.parent = current;\n  destination.g = current.g + weight;\n  destination.f = destination.g + destination.h;\n};\n\nconst formulateActions = (current, graph) => {\n  const row = current.row;\n  const col = current.col;\n  const actions = [];\n  //up\n  if (row > 0) actions.push(graph.nodes[row - 1][col]);\n  //right\n  if (col < graph.nodes[0].length - 1) actions.push(graph.nodes[row][col + 1]);\n  //down\n  if (row < graph.nodes.length - 1) actions.push(graph.nodes[row + 1][col]);\n  //left\n  if (col > 0) actions.push(graph.nodes[row][col - 1]);\n\n  return actions;\n};\n\nconst bfs = (current, destination, graph) => {\n  //destination not in open list\n  if (!graph.checkOpen(destination)) {\n    updateDiscoveredNode(destination, current, 1);\n    graph.open.push(destination);\n  }\n};\n\nconst dfs = (current, destination, graph) => {\n  updateDiscoveredNode(destination, current, 1);\n  //deepest node expands first\n  if (graph.checkOpen(destination)) {\n    graph.open.splice(graph.open.indexOf(destination), 1);\n  }\n  graph.open.unshift(destination);\n};\n\n// const dijkstra = (current, destination, graph) => {\n//   if (!graph.checkOpen(destination)){\n//     updateDiscoveredNode(destination, current, current.weight);\n//     graph.open.push(destination);\n//   }\n//   else {\n//     if (current.f + destination.weight < destination.f){\n//       updateDiscoveredNode(destination, current, destination.weight);\n//     }\n//   }\n// }\n\nconst bestFirstSearch = (current, destination, graph) => {\n  if (!graph.checkOpen(destination)) {\n    updateDiscoveredNode(destination, current, destination.weight);\n    graph.open.push(destination);\n  } else {\n    let cost = current.g + destination.weight;\n    if (cost + destination.h <= destination.f) {\n      updateDiscoveredNode(destination, current, destination.weight);\n    }\n  }\n};\n\n//dijkstra and A*\nconst weightedSearch = (current, destination, graph) => {\n  if (!graph.checkOpen(destination)) {\n    updateDiscoveredNode(destination, current, destination.weight);\n    graph.open.push(destination);\n  } else {\n    let cost = current.g + destination.weight;\n    if (cost + destination.h <= destination.f) {\n      updateDiscoveredNode(destination, current, destination.weight);\n    }\n  }\n};\n\n//Manhattan Distance (the lightest weight = 1)\nconst heuristic = (node, goalNode) => {\n  let dx = Math.abs(node.col - goalNode.col);\n  let dy = Math.abs(node.row - goalNode.row);\n  return dx + dy;\n};\n\nexport default graphSearch;\n","import React from \"react\";\n\nconst ContextMenu = props => {\n  const {visible, contextMenuNode} = props;\n  const isVisible = visible ? \"visible\" : \"\";\n  const isValidNode = contextMenuNode !== null ? true : false;\n\n\n  return (\n    <div className={`contextMenu ${isVisible}`}>\n      <p>position: {isValidNode ? contextMenuNode.row + \", \" + contextMenuNode.col : \"\"}</p>\n      <p>parent: {isValidNode ? contextMenuNode.parent !== null ? \"Node(\" + contextMenuNode.parent.row + \", \" + contextMenuNode.parent.col + \")\" : \"\" : \"\"}</p>\n      <p>visited: {isValidNode ? contextMenuNode.visited ? \"true\" : \"false\" : \"\"}</p>\n      <p>weight: {isValidNode ? contextMenuNode.weight: \"\"}</p>\n      <p>cost: {isValidNode ? contextMenuNode.g : \"\"}</p>\n      <p>heuristic: {isValidNode ? contextMenuNode.h : \"\"}</p>\n    </div>\n  )\n}\n\nexport default ContextMenu;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Grid from \"./components/Grid\";\nimport NavBar from \"./components/NavBar\";\nimport Graph from \"./Graph\";\nimport graphSearch from \"./algorithms\";\nimport _ from \"lodash\";\nimport ContextMenu from \"./components/ContextMenu\";\n\nconst START_NODE_ROW = 12;\nconst START_NODE_COL = 15;\nconst GOAL_NODE_ROW = 12;\nconst GOAL_NODE_COL = 35;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      graph: new Graph(),\n      algoChosen: \"\", //which algorithm to run\n      animationActivated: false, //can't add feature or activate search when animation is going on\n      clickAction: \"\", //click on special or normal nodes\n      addNodeFeature: \"Wall\", //current feature option\n      visible: false, //for context menu\n      contextMenuNode: null\n    };\n  }\n\n  componentDidMount = () => {\n    const graph = new Graph();\n    graph.initializeGraph();\n\n    const startNode = graph.nodes[START_NODE_ROW][START_NODE_COL];\n    graph.startNode = startNode;\n    startNode.isStart = true;\n\n    const goalNode = graph.nodes[GOAL_NODE_ROW][GOAL_NODE_COL];\n    graph.goalNode = goalNode;\n    goalNode.isGoal = true;\n    this.setState({ graph });\n  };\n\n  //algorithm selection\n  handleAlgoDropdown = name => {\n    if (name !== \"Dijkstra\" || name !== \"A*\")\n      this.setState({ algoChosen: name, addNodeFeature: \"Wall\" });\n    else this.setState({ algoChosen: name });\n  };\n\n  handleNodeFeatureDropdown = name => {\n    this.setState({ addNodeFeature: name });\n  };\n\n  copyGraph = state => {\n    const graph = _.cloneDeep(state.graph);\n    return graph;\n  };\n\n  onMouseDown = (e, node) => {\n    if (\n      !this.state.animationActivated &&\n      e.button === 0 &&\n      !this.state.visible\n    ) {\n      //actions to take depends on what node user clicked on\n      this.setState({\n        clickAction: node.isStart ? \"start\" : node.isGoal ? \"goal\" : \"normal\"\n      });\n      //click on non-special nodes will turn them to walls\n      const graph = this.copyGraph(this.state);\n\n      if (!node.isStart && !node.isGoal) {\n        if (\n          this.state.addNodeFeature === \"Wall\" &&\n          graph.nodes[node.row][node.col].weight === 1\n        )\n          graph.nodes[node.row][node.col].isWall = !node.isWall;\n        else if (\n          this.state.addNodeFeature === \"Weight 3\" &&\n          !graph.nodes[node.row][node.col].isWall\n        )\n          if (graph.nodes[node.row][node.col].weight !== 3) {\n            graph.nodes[node.row][node.col].weight = 3;\n          } else graph.nodes[node.row][node.col].weight = 1;\n        else if (\n          this.state.addNodeFeature === \"Weight 5\" &&\n          !graph.nodes[node.row][node.col].isWall\n        )\n          if (graph.nodes[node.row][node.col].weight !== 5) {\n            graph.nodes[node.row][node.col].weight = 5;\n          } else graph.nodes[node.row][node.col].weight = 1;\n      }\n      this.setState({ graph });\n    } else if (this.state.visible) {\n      if (!e.target.classList.contains(\"contextMenu\"))\n        this.setState({ visible: false, contextMenuNode: null });\n    }\n  };\n\n  onMouseEnter = node => {\n    if (this.state.clickAction !== \"\") {\n      this.setState((state, props) => {\n        const graph = this.copyGraph(state);\n\n        if (state.clickAction === \"start\") {\n          graph.startNode = graph.nodes[node.row][node.col];\n          graph.nodes[node.row][node.col].isStart = true;\n        } else if (state.clickAction === \"goal\") {\n          graph.goalNode = graph.nodes[node.row][node.col];\n          graph.nodes[node.row][node.col].isGoal = true;\n        } else if (\n          state.clickAction === \"normal\" &&\n          !node.isStart &&\n          !node.isGoal &&\n          this.state.addNodeFeature === \"Wall\" &&\n          graph.nodes[node.row][node.col].weight === 1\n        ) {\n          graph.nodes[node.row][node.col].isWall = !node.isWall;\n        } else if (\n          state.clickAction === \"normal\" &&\n          !node.isStart &&\n          !node.isGoal &&\n          this.state.addNodeFeature === \"Weight 3\" &&\n          !graph.nodes[node.row][node.col].isWall\n        ) {\n          if (graph.nodes[node.row][node.col].weight !== 3) {\n            graph.nodes[node.row][node.col].weight = 3;\n          } else graph.nodes[node.row][node.col].weight = 1;\n        } else if (\n          state.clickAction === \"normal\" &&\n          !node.isStart &&\n          !node.isGoal &&\n          this.state.addNodeFeature === \"Weight 5\" &&\n          !graph.nodes[node.row][node.col].isWall\n        ) {\n          if (graph.nodes[node.row][node.col].weight !== 5) {\n            graph.nodes[node.row][node.col].weight = 5;\n          } else graph.nodes[node.row][node.col].weight = 1;\n        }\n        return { ...state, graph };\n      });\n    }\n  };\n\n  onMouseLeave = node => {\n    if (this.state.clickAction !== \"\") {\n      this.setState((state, props) => {\n        const graph = this.copyGraph(state);\n\n        if (this.state.clickAction === \"start\")\n          graph.nodes[node.row][node.col].isStart = false;\n        else if (this.state.clickAction === \"goal\")\n          graph.nodes[node.row][node.col].isGoal = false;\n        return { ...state, graph };\n      });\n    }\n  };\n\n  onMouseUp = () => {\n    //mouse up after either start node or goal node is clicked\n    if (this.state.clickAction !== \"\") this.setState({ clickAction: \"\" });\n  };\n\n  onContextMenu = (e, node) => {\n    e.preventDefault();\n    const contextMenu = document.getElementsByClassName(\"contextMenu\");\n    const clickX = e.clientX;\n    const clickY = e.clientY;\n    const screenW = window.innerWidth;\n    const screenH = window.innerHeight;\n    const rootW = contextMenu[0].offsetWidth;\n    const rootH = contextMenu[0].offsetHeight;\n\n    const right = screenW - clickX > rootW;\n    const left = !right;\n    const top = screenH - clickY > rootH;\n    const bottom = !top;\n\n    if (right) {\n      contextMenu[0].style.left = `${clickX + 5}px`;\n    }\n\n    if (left) {\n      contextMenu[0].style.left = `${clickX - rootW - 5}px`;\n    }\n\n    if (top) {\n      contextMenu[0].style.top = `${clickY + 5}px`;\n    }\n\n    if (bottom) {\n      contextMenu[0].style.top = `${clickY - rootH - 5}px`;\n    }\n\n    this.setState({ visible: true, contextMenuNode: node });\n  };\n\n  activateSearch = () => {\n    if (this.state.algoChosen !== \"\" && !this.state.animationActivated) {\n      this.setState((state, props) => {\n        const graph = this.copyGraph(state);\n        graph.resetGraph();\n        graphSearch(graph, state.algoChosen);\n        //graph.closed.forEach((node) => {node.visited = true;});\n        return { graph, animationActivated: true };\n      });\n      setTimeout(() => this.animateSearch(), 100);\n    }\n  };\n\n  //animate path searching by changing 'visited' property of nodes in closed list to true\n  animateSearch = () => {\n    const oldGraph = this.state.graph;\n    let i;\n    oldGraph.closed.forEach((node, iteration) => {\n      i = iteration;\n      setTimeout(() => {\n        this.setState((state, props) => {\n          const graph = this.copyGraph(state);\n          graph.nodes[node.row][node.col].visited = true;\n          return { graph };\n        });\n      }, 50 * iteration);\n    });\n    setTimeout(() => this.animatePath(), 50 * (i + 1));\n  };\n\n  animatePath = () => {\n    let current = this.state.graph.goalNode;\n    const path = [];\n    let i;\n    //if node's parent is not itself and there's a path\n    while (current.parent !== current && current.parent !== null) {\n      path.unshift({ row: current.row, col: current.col });\n      current = current.parent;\n    }\n    path.unshift({ row: current.row, col: current.col });\n\n    if (current.parent === current) {\n      path.forEach((coordinates, iteration) => {\n        i = iteration;\n        setTimeout(() => {\n          this.setState((state, props) => {\n            const newGraph = this.copyGraph(state);\n            newGraph.nodes[coordinates.row][coordinates.col].isPath = true;\n            return { graph: newGraph };\n          });\n        }, 50 * iteration);\n      });\n    }\n    setTimeout(() => {\n      this.setState({ animationActivated: false });\n    }, 50 * i);\n  };\n\n  clearWalls = () => {\n    if (!this.state.animationActivated) {\n      const newGraph = this.copyGraph(this.state);\n      newGraph.nodes.forEach(row => {\n        row.forEach(node => {\n          node.isWall = false;\n        });\n      });\n      this.setState({ graph: newGraph });\n    }\n  };\n\n  clearWeight = () => {\n    if (!this.state.animationActivated) {\n      const newGraph = this.copyGraph(this.state);\n      newGraph.nodes.forEach(row => {\n        row.forEach(node => {\n          node.weight = 1;\n        });\n      });\n      this.setState({ graph: newGraph });\n    }\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <NavBar\n          algoChosen={this.state.algoChosen}\n          handleAlgoDropdown={this.handleAlgoDropdown}\n          handleNodeFeatureDropdown={this.handleNodeFeatureDropdown}\n          activateSearch={this.activateSearch}\n          resetGraph={this.resetGraph}\n          clearWalls={this.clearWalls}\n          clearWeight={this.clearWeight}\n          animationActivated={this.state.animationActivated}\n          addNodeFeature={this.state.addNodeFeature}\n        />\n        <Grid\n          grid={this.state.graph.nodes}\n          onMouseDown={this.onMouseDown}\n          onMouseEnter={this.onMouseEnter}\n          onMouseLeave={this.onMouseLeave}\n          onMouseUp={this.onMouseUp}\n          onContextMenu={this.onContextMenu}\n        />\n        <ContextMenu\n          visible={this.state.visible}\n          contextMenuNode={this.state.contextMenuNode}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/js/dist/dropdown'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {BrowserRouter} from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<BrowserRouter basename={process.env.PUBLIC_URL}>\n  {console.log(process.env.PUBLIC_URL)}\n  <App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}